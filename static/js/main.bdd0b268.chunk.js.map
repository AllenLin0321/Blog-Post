{"version":3,"sources":["reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","api/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","index.js"],"names":["combineReducers","posts","state","type","payload","users","axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","data","fetchUser","userId","UserHeader","user","this","props","className","name","React","Component","connect","ownProps","find","id","PostList","fetchPostsAndUsers","map","post","key","title","body","renderList","getState","_","chain","uniq","forEach","value","App","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"0MAIeA,cAAgB,CAC7BC,MCLa,WAAoC,IAAnCC,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClC,OAAQD,GACN,IAAK,cACH,OAAOC,EACT,QACE,OAAOF,IDCXG,MENa,WAAoC,IAAnCH,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClC,OAAQD,GACN,IAAK,aACH,MAAM,GAAN,mBAAWD,GAAX,CAAkBE,IACpB,QACE,OAAOF,M,6ECHEI,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCWEC,EAAa,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,gBACtBC,EADsB,EACtBA,KACRJ,EAAS,CAAEP,KAAM,cAAeC,QAASU,IAFX,2CAAN,uDAabC,EAAY,SAAAC,GAAM,8CAAI,WAAMN,GAAN,iBAAAC,EAAA,sEACVC,EAAgBC,IAAhB,iBAA8BG,IADpB,gBACzBF,EADyB,EACzBA,KACRJ,EAAS,CAAEP,KAAM,aAAcC,QAASU,IAFP,2CAAJ,uDCxBzBG,E,uKACM,IACAC,EAASC,KAAKC,MAAdF,KACR,OAAKA,EACE,yBAAKG,UAAU,UAAUH,EAAKI,MADnB,S,GAHGC,IAAMC,WAYhBC,eAJS,SAACvB,EAAOwB,GAC9B,MAAO,CAAER,KAAMhB,EAAMG,MAAMsB,MAAK,SAAAT,GAAI,OAAIA,EAAKU,KAAOF,EAASV,aAGhDS,CAAyBR,GCVlCY,E,kLAGFV,KAAKC,MAAMU,uB,mCAIX,OAAOX,KAAKC,MAAMnB,MAAM8B,KAAI,SAAAC,GAC1B,OACE,yBAAKX,UAAU,OAAOY,IAAKD,EAAKJ,IAC9B,uBAAGP,UAAU,mCACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,4BAAKW,EAAKE,OACV,2BAAIF,EAAKG,OAEX,kBAAC,EAAD,CAAYnB,OAAQgB,EAAKhB,gB,+BAQjC,OAAO,yBAAKK,UAAU,2BAA2BF,KAAKiB,kB,GAxBnCb,IAAMC,WAgCdC,eAJS,SAAC,GACvB,MAAO,CAAExB,MAD4B,EAAZA,SAIa,CAAEQ,aAAYqB,mBFlCpB,yDAAM,WAAOpB,EAAU2B,GAAjB,SAAA1B,EAAA,sEAChCD,EAASD,KADuB,OAItC6B,IAAEC,MAAMF,IAAWpC,OAChB8B,IAAI,UACJS,OACAC,SAAQ,SAAAb,GAAE,OAAIlB,EAASK,EAAUa,OACjCc,QARmC,2CAAN,0DEkCnBjB,CACbI,GC5Bac,EARH,WACV,OACE,yBAAKtB,UAAU,gBACb,kBAAC,EAAD,QCIAuB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.bdd0b268.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer,\r\n});\r\n","export default (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case 'FETCH_POSTS':\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case 'FETCH_USER':\r\n      return [...state, payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com',\r\n});\r\n","import _ from 'lodash';\r\nimport jsonPlaceholder from '../api/jsonPlaceholder';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n  // const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n  // userIds.forEach(id => dispatch(fetchUser(id)));\r\n  _.chain(getState().posts)\r\n    .map('userId')\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const { data } = await jsonPlaceholder.get('/posts');\r\n  dispatch({ type: 'FETCH_POSTS', payload: data });\r\n};\r\n/* 上面的寫法相同於下面的\r\nexport const fetchPosts = function() {\r\n  return async function(dispatch) {\r\n    const { data } = await jsonPlaceholder.get('/posts');\r\n    dispatch({ type: 'FETCH_POSTS', payload: data });\r\n  };\r\n};\r\n*/\r\n\r\nexport const fetchUser = userId => async dispatch => {\r\n  const { data } = await jsonPlaceholder.get(`/users/${userId}`);\r\n  dispatch({ type: 'FETCH_USER', payload: data });\r\n};\r\n\r\n/* User Lodash Memoize  */\r\n// export const fetchUser = userId => dispatch => _fetchUser(userId, dispatch);\r\n// const _fetchUser = _.memoize(async (userId, dispatch) => {\r\n//   const { data } = await jsonPlaceholder.get(`/users/${userId}`);\r\n//   dispatch({ type: 'FETCH_USER', payload: data });\r\n// });\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    if (!user) return null;\r\n    return <div className=\"header\">{user.name}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { user: state.users.find(user => user.id === ownProps.userId) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts, fetchPostsAndUsers } from '../actions';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends React.Component {\r\n  componentDidMount() {\r\n    // this.props.fetchPosts();\r\n    this.props.fetchPostsAndUsers();\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.posts.map(post => {\r\n      return (\r\n        <div className=\"item\" key={post.id}>\r\n          <i className=\"large middle aligned icon user\"></i>\r\n          <div className=\"content\">\r\n            <div className=\"description\">\r\n              <h2>{post.title}</h2>\r\n              <p>{post.body}</p>\r\n            </div>\r\n            <UserHeader userId={post.userId} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ posts }) => {\r\n  return { posts };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPosts, fetchPostsAndUsers })(\r\n  PostList\r\n);\r\n","import React from 'react';\r\nimport PostList from './PostList';\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <PostList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\nimport App from './components/App';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}